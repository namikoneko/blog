<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ある法律事務所のIT担当者の日記</title>
    <link>https://namikoneko.github.io/blog2/index.xml</link>
    <description>Recent content on ある法律事務所のIT担当者の日記</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>yaguchi All rights reserved.</copyright>
    <lastBuildDate>Sun, 06 Oct 2019 10:49:46 +0900</lastBuildDate>
    <atom:link href="https://namikoneko.github.io/blog2/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>heroku備忘</title>
      <link>https://namikoneko.github.io/blog2/posts/heroku/</link>
      <pubDate>Sun, 06 Oct 2019 10:49:46 +0900</pubDate>
      
      <guid>https://namikoneko.github.io/blog2/posts/heroku/</guid>
      <description>&lt;p&gt;【Python】PythonプログラムをHerokuにデプロイする方法 - Qiita&lt;br /&gt;
&lt;a href=&#34;https://qiita.com/1-row/items/80f89c8ada2e61f04446&#34;&gt;https://qiita.com/1-row/items/80f89c8ada2e61f04446&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;公式チュートリアル&lt;br /&gt;
&lt;a href=&#34;https://devcenter.heroku.com/articles/getting-started-with-python#deploy-the-app&#34;&gt;https://devcenter.heroku.com/articles/getting-started-with-python#deploy-the-app&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;flaskの場合&lt;/p&gt;

&lt;p&gt;仮想環境を作成&lt;br /&gt;
python3 -m venv myproject&lt;br /&gt;
cd myproject&lt;br /&gt;
pipでflaskとgunicornをinstall&lt;br /&gt;
最低限のapp.pyを作成&lt;br /&gt;
git init&lt;br /&gt;
git add .&lt;br /&gt;
git commit -m&amp;rdquo;1st commit&amp;rdquo;&lt;br /&gt;
heroku create &amp;ldquo;myapp191006&amp;rdquo;（リモートの紐づけもされる）&lt;br /&gt;
git push heroku master&lt;br /&gt;
heroku open&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>hugo備忘</title>
      <link>https://namikoneko.github.io/blog2/posts/hugo/</link>
      <pubDate>Sun, 06 Oct 2019 10:25:21 +0900</pubDate>
      
      <guid>https://namikoneko.github.io/blog2/posts/hugo/</guid>
      <description>&lt;p&gt;ローカルのブラウザで確認&lt;br /&gt;
hugo server -D&lt;/p&gt;

&lt;p&gt;コード(markdown)&lt;br /&gt;
半角スペース4文字かタブ&lt;/p&gt;

&lt;p&gt;vimなら，&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;でタブ&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>vim備忘</title>
      <link>https://namikoneko.github.io/blog2/posts/vim/</link>
      <pubDate>Sun, 06 Oct 2019 10:21:13 +0900</pubDate>
      
      <guid>https://namikoneko.github.io/blog2/posts/vim/</guid>
      <description>&lt;p&gt;ビジュアルモード&lt;br /&gt;
v 単語単位&lt;br /&gt;
V 行単位&lt;br /&gt;
^v 矩形選択,ブロックモード&lt;/p&gt;

&lt;p&gt;矩形選択で複数行の頭を選択し，&lt;code&gt;&amp;gt;&lt;/code&gt;で字下げするのが，よく使うと思う&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>flask備忘</title>
      <link>https://namikoneko.github.io/blog2/posts/flask/</link>
      <pubDate>Sun, 06 Oct 2019 10:09:52 +0900</pubDate>
      
      <guid>https://namikoneko.github.io/blog2/posts/flask/</guid>
      <description>&lt;p&gt;Flaskバージョン&lt;br /&gt;
Flask==1.0.2&lt;/p&gt;

&lt;p&gt;仮想環境にするとき&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;python3 -m venv flaskworkd
. bin/activate
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;仮想環境から抜けるとき&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;deactivate
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最小限のコード(main.py)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;from flask import Flask
app = Flask(__name__)

@app.route(&#39;/&#39;)
def hello_world():
return &#39;hello flask&#39;

if __name__==&#39;__main__&#39;:
app.debug = True
app.run()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;起動&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;python3 main.py
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>git備忘</title>
      <link>https://namikoneko.github.io/blog2/posts/git/</link>
      <pubDate>Sun, 29 Sep 2019 12:15:41 +0900</pubDate>
      
      <guid>https://namikoneko.github.io/blog2/posts/git/</guid>
      <description>&lt;p&gt;git checkout id&lt;br /&gt;
作業ディレクトリの内容を過去のものに変更できる&lt;/p&gt;

&lt;p&gt;git checkout master&lt;br /&gt;
最後は，HEADをmasterに戻す&lt;br /&gt;
そうしないとdetached HEADと言われる&lt;/p&gt;

&lt;p&gt;git add .&lt;br /&gt;
git commit &amp;ndash;amend&lt;br /&gt;
commit後に小さな変更をして，commitを修正したいとき&lt;/p&gt;

&lt;p&gt;git commit &amp;ndash;amend &amp;ndash;no-edit&lt;br /&gt;
エディタが開かない&lt;/p&gt;

&lt;p&gt;git commit &amp;ndash;amend -m &amp;ldquo;fugafuga&amp;rdquo;&lt;br /&gt;
commitメッセージの修正&lt;/p&gt;

&lt;p&gt;git pull&lt;br /&gt;
変更ないのにpullしても，メッセージが出るだけなので，常にpullしておけばよい&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>テスト</title>
      <link>https://namikoneko.github.io/blog2/posts/test/</link>
      <pubDate>Mon, 16 Sep 2019 22:45:56 +0900</pubDate>
      
      <guid>https://namikoneko.github.io/blog2/posts/test/</guid>
      <description>&lt;p&gt;・テスト投稿&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>